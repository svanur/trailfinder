## Select environment via: Run with: [dev|...]
## See: TrailFinder.Api/http-client.env.json

### Get all trails
GET {{hostAddress}}/api/trails
Accept: application/json

### Get a specific trail by id
GET {{hostAddress}}/api/trails/{{trailId}}
Accept: application/json

### Get a specific trail by slug
GET {{hostAddress}}/api/trails/esja-ultra-marathon
Accept: application/json

### Get all races
GET {{hostAddress}}/api/races
Accept: application/json

### Get a specific race by id
GET {{hostAddress}}/api/races/{{raceId}}
Accept: application/json

### Get a specific race by slug
GET {{hostAddress}}/api/races/laugavegur-ultra
Accept: application/json

### Get all locations
GET {{hostAddress}}/api/locations
Accept: application/json

### Get a specific location by id
GET {{hostAddress}}/api/locations/{{locationId}}
Accept: application/json

### Get a specific location by slug
GET {{hostAddress}}/api/locations/landmannalaugar
Accept: application/json

### When trail/s do not exist

### Guid does not exist
GET {{hostAddress}}/api/trails/1.2.3.4
Accept: application/json

### slug does not exist
GET {{hostAddress}}/api/trails/slug-does-not-exist
Accept: application/json

### Update trail info by id
PUT {{hostAddress}}/api/trails/{{trailId}}
Content-Type: application/json

{
  "distance": 15500.50,
  "elevationGain": 850.0,
  "difficultyLevel": "extreme",
  "updatedBy": "{{userId}}"
}


### When validation error occur

### guid is not the right length
GET {{hostAddress}}/api/trails/366-66fba19c4240
Accept: application/json


#############################################################
### GPX File Operations (Controller: GpxFilesController) ###
#############################################################

### Upload GPX file for a specific trail
# Replace {{trailId}} with an actual valid Trail ID
# Replace path/to/your/file.gpx with the actual local path to a GPX file
POST {{hostAddress}}/api/trails/{{trailId}}/gpx-files/upload
Content-Type: multipart/form-data

--boundary_string
Content-Disposition: form-data; name="file"; filename="my-test-trail.gpx"
Content-Type: application/gpx+xml

C:\dev\trailfinder\TrailFinder.DB\supabase\seeds\gpx-files\esja-ultra-marathon.gpx
--boundary_string--


### Get GPX file metadata for a specific trail
# This fetches the metadata stored in your gpx_files table // TODO: add this endpoint
GET {{hostAddress}}/api/trails/{{trailId}}/gpx-files/metadata
Accept: application/json


### Download GPX file for a specific trail
# This fetches the actual GPX file content from Supabase Storage
GET {{hostAddress}}/api/trails/{{trailId}}/gpx-files/download
Accept: application/gpx+xml
