// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TrailFinder.Core.Enums;
using TrailFinder.Infrastructure.Persistence;

#nullable disable

namespace TrailFinder.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250624142801_AddZDimensionToGeometries")]
    partial class AddZDimensionToGeometries
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "difficulty_level", new[] { "easy", "moderate", "hard", "extreme", "unknown" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "route_type", new[] { "circular", "out-and-back", "point-to-point", "unknown" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "terrain_type", new[] { "flat", "rolling", "hilly", "mountainous", "unknown" });
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "postgis");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TrailFinder.Core.Entities.Trail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DifficultyLevel?>("DifficultyLevel")
                        .HasColumnType("difficulty_level")
                        .HasColumnName("difficulty_level");

                    b.Property<RouteType?>("RouteType")
                        .HasColumnType("route_type")
                        .HasColumnName("route_type");
                    
                    b.Property<TerrainType?>("TerrainType")
                        .HasColumnType("terrain_type")
                        .HasColumnName("terrain_type");
                    
                    b.Property<double>("Distance")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("distance");

                    b.Property<double>("ElevationGain")
                        .HasColumnType("double precision")
                        .HasColumnName("elevation_gain");

    

                    b.Property<bool>("HasGpx")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("has_gpx");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");
                    
                    b.Property<LineString>("RouteGeom")
                        .HasColumnType("geometry(LineStringZ, 4326)")
                        .HasColumnName("route_geom");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("slug");

          

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.Property<string>("WebUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("character varying(2048)")
                        .HasColumnName("web_url");

                    b.HasKey("Id");

                    b.HasIndex("RouteGeom");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("RouteGeom"), "GIST");

                    b.HasIndex("Slug")
                        .IsUnique();
 
                    b.HasIndex("UserId");

                    b.ToTable("trails", (string)null);
                });
            
#pragma warning restore 612, 618
        }
    }
}
